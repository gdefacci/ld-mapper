package org.obl.jsonld
package builder

import shapeless._

trait HWrite[H <: HList, ET] {
  def apply(h: H): LdEncode[ET]
}

object HWrite {

  def apply[H <: HList, ET](f: H => LdEncode[ET]) =
    new HWrite[H, ET] {
      def apply(h: H): LdEncode[ET] = f(h)
    }

  type HType1[T1] = LdFieldEncode[T1] :: HNil.type
  type HType2[T1, T2] = LdFieldEncode[T2] :: HType1[T1]
  type HType3[T1, T2, T3] = LdFieldEncode[T3] :: HType2[T1, T2]
  type HType4[T1, T2, T3, T4] = LdFieldEncode[T4] :: HType3[T1, T2, T3]
  type HType5[T1, T2, T3, T4, T5] = LdFieldEncode[T5] :: HType4[T1, T2, T3, T4]
  type HType6[T1, T2, T3, T4, T5, T6] = LdFieldEncode[T6] :: HType5[T1, T2, T3, T4, T5]
  type HType7[T1, T2, T3, T4, T5, T6, T7] = LdFieldEncode[T7] :: HType6[T1, T2, T3, T4, T5, T6]
  type HType8[T1, T2, T3, T4, T5, T6, T7, T8] = LdFieldEncode[T8] :: HType7[T1, T2, T3, T4, T5, T6, T7]
  type HType9[T1, T2, T3, T4, T5, T6, T7, T8, T9] = LdFieldEncode[T9] :: HType8[T1, T2, T3, T4, T5, T6, T7, T8]
  type HType10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10] = LdFieldEncode[T10] :: HType9[T1, T2, T3, T4, T5, T6, T7, T8, T9]
  type HType11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11] = LdFieldEncode[T11] :: HType10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]
  type HType12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12] = LdFieldEncode[T12] :: HType11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11]
  type HType13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13] = LdFieldEncode[T13] :: HType12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12]
  type HType14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14] = LdFieldEncode[T14] :: HType13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13]
  type HType15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15] = LdFieldEncode[T15] :: HType14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14]
  type HType16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] = LdFieldEncode[T16] :: HType15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15]
  type HType17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17] = LdFieldEncode[T17] :: HType16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]
  type HType18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18] = LdFieldEncode[T18] :: HType17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17]
  type HType19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19] = LdFieldEncode[T19] :: HType18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18]
  type HType20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20] = LdFieldEncode[T20] :: HType19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19]
  type HType21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21] = LdFieldEncode[T21] :: HType20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20]
  type HType22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22] = LdFieldEncode[T22] :: HType21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21]

  implicit def toEncodeJsonLd1[T1] = apply[HType1[T1], T1] { h => LdEncode(h.head) }
  implicit def toEncodeJsonLd2[T1, T2] = apply[HType2[T1, T2], (T1, T2)] { h => LdEncode(h.tail.head, h.head) }
  implicit def toEncodeJsonLd3[T1, T2, T3] = apply[HType3[T1, T2, T3], (T1, T2, T3)] { h => LdEncode(h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd4[T1, T2, T3, T4] = apply[HType4[T1, T2, T3, T4], (T1, T2, T3, T4)] { h => LdEncode(h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd5[T1, T2, T3, T4, T5] = apply[HType5[T1, T2, T3, T4, T5], (T1, T2, T3, T4, T5)] { h => LdEncode(h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd6[T1, T2, T3, T4, T5, T6] = apply[HType6[T1, T2, T3, T4, T5, T6], (T1, T2, T3, T4, T5, T6)] { h => LdEncode(h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd7[T1, T2, T3, T4, T5, T6, T7] = apply[HType7[T1, T2, T3, T4, T5, T6, T7], (T1, T2, T3, T4, T5, T6, T7)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd8[T1, T2, T3, T4, T5, T6, T7, T8] = apply[HType8[T1, T2, T3, T4, T5, T6, T7, T8], (T1, T2, T3, T4, T5, T6, T7, T8)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd9[T1, T2, T3, T4, T5, T6, T7, T8, T9] = apply[HType9[T1, T2, T3, T4, T5, T6, T7, T8, T9], (T1, T2, T3, T4, T5, T6, T7, T8, T9)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10] = apply[HType10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11] = apply[HType11[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12] = apply[HType12[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13] = apply[HType13[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14] = apply[HType14[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15] = apply[HType15[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] = apply[HType16[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17] = apply[HType17[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18] = apply[HType18[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19] = apply[HType19[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20] = apply[HType20[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21] = apply[HType21[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }
  implicit def toEncodeJsonLd22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22] = apply[HType22[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22], (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22)] { h => LdEncode(h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.tail.head, h.tail.tail.tail.tail.head, h.tail.tail.tail.head, h.tail.tail.head, h.tail.head, h.head) }

}